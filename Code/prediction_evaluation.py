def evaluate_model(predictions, actuals):
    """
    Evaluate the performance of the model using Mean Absolute Error (MAE) and Mean Squared Error (MSE).

    Parameters:
    predictions (list): The predicted stock prices.
    actuals (list): The actual stock prices.

    Returns:
    dict: A dictionary containing MAE and MSE values.
    """
    try:
        if len(predictions) != len(actuals):
            raise ValueError("Length of predictions and actuals must be the same.")

        mae = sum(abs(p - a) for p, a in zip(predictions, actuals)) / len(actuals)
        mse = sum((p - a) ** 2 for p, a in zip(predictions, actuals)) / len(actuals)

        return {"MAE": mae, "MSE": mse}
    
    except Exception as e:
        print(f"Error in evaluating model: {e}")
        return None


def make_predictions(model, data):
    """
    Make predictions using the trained model.

    Parameters:
    model: The trained machine learning model.
    data (array-like): The input data for making predictions.

    Returns:
    list: The predicted stock prices.
    """
    try:
        predictions = model.predict(data)
        return predictions.tolist()
    
    except Exception as e:
        print(f"Error in making predictions: {e}")
        return None

# Generated by Nicole LeGuern